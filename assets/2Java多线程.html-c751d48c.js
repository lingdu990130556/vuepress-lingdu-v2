const l=JSON.parse('{"key":"v-4763ac7a","path":"/Java%E5%91%A8%E8%BE%B9/%E5%9F%BA%E7%A1%80/java/2Java%E5%A4%9A%E7%BA%BF%E7%A8%8B.html","title":"Java多线程","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"简述java内存模型（JMM）","slug":"简述java内存模型-jmm","link":"#简述java内存模型-jmm","children":[]},{"level":2,"title":"简述as-if-serial","slug":"简述as-if-serial","link":"#简述as-if-serial","children":[]},{"level":2,"title":"简述happens-before八大原则","slug":"简述happens-before八大原则","link":"#简述happens-before八大原则","children":[]},{"level":2,"title":"as-if-serial 和 happens-before 的区别","slug":"as-if-serial-和-happens-before-的区别","link":"#as-if-serial-和-happens-before-的区别","children":[]},{"level":2,"title":"简述原子性操作","slug":"简述原子性操作","link":"#简述原子性操作","children":[]},{"level":2,"title":"简述线程的可见性","slug":"简述线程的可见性","link":"#简述线程的可见性","children":[]},{"level":2,"title":"简述有序性","slug":"简述有序性","link":"#简述有序性","children":[]},{"level":2,"title":"简述java中volatile关键字作用","slug":"简述java中volatile关键字作用","link":"#简述java中volatile关键字作用","children":[]},{"level":2,"title":"java线程的实现方式","slug":"java线程的实现方式","link":"#java线程的实现方式","children":[]},{"level":2,"title":"简述java线程的状态","slug":"简述java线程的状态","link":"#简述java线程的状态","children":[]},{"level":2,"title":"简述线程通信的方式","slug":"简述线程通信的方式","link":"#简述线程通信的方式","children":[]},{"level":2,"title":"简述线程池","slug":"简述线程池","link":"#简述线程池","children":[]},{"level":2,"title":"线程池参数","slug":"线程池参数","link":"#线程池参数","children":[]},{"level":2,"title":"线程池创建方法","slug":"线程池创建方法","link":"#线程池创建方法","children":[]},{"level":2,"title":"简述Executor框架","slug":"简述executor框架","link":"#简述executor框架","children":[]},{"level":2,"title":"简述Executor的继承关系","slug":"简述executor的继承关系","link":"#简述executor的继承关系","children":[]},{"level":2,"title":"简述线程池的状态","slug":"简述线程池的状态","link":"#简述线程池的状态","children":[]},{"level":2,"title":"简述阻塞队列","slug":"简述阻塞队列","link":"#简述阻塞队列","children":[]},{"level":2,"title":"谈一谈ThreadLocal","slug":"谈一谈threadlocal","link":"#谈一谈threadlocal","children":[]},{"level":2,"title":"聊聊你对java并发包下unsafe类的理解","slug":"聊聊你对java并发包下unsafe类的理解","link":"#聊聊你对java并发包下unsafe类的理解","children":[]},{"level":2,"title":"JAVA中的乐观锁与CAS算法","slug":"java中的乐观锁与cas算法","link":"#java中的乐观锁与cas算法","children":[]},{"level":2,"title":"ABA问题及解决方法简述","slug":"aba问题及解决方法简述","link":"#aba问题及解决方法简述","children":[]},{"level":2,"title":"简述常见的Atomic类","slug":"简述常见的atomic类","link":"#简述常见的atomic类","children":[]},{"level":2,"title":"简述Atomic类基本实现原理","slug":"简述atomic类基本实现原理","link":"#简述atomic类基本实现原理","children":[]},{"level":2,"title":"简述CountDownLatch","slug":"简述countdownlatch","link":"#简述countdownlatch","children":[]},{"level":2,"title":"简述CyclicBarrier","slug":"简述cyclicbarrier","link":"#简述cyclicbarrier","children":[]},{"level":2,"title":"简述Semaphore","slug":"简述semaphore","link":"#简述semaphore","children":[]},{"level":2,"title":"简述Exchanger","slug":"简述exchanger","link":"#简述exchanger","children":[]},{"level":2,"title":"简述ConcurrentHashMap","slug":"简述concurrenthashmap","link":"#简述concurrenthashmap","children":[]},{"level":2,"title":"Synchronized底层实现原理","slug":"synchronized底层实现原理","link":"#synchronized底层实现原理","children":[]},{"level":2,"title":"Synchronized关键词使用方法","slug":"synchronized关键词使用方法","link":"#synchronized关键词使用方法","children":[]},{"level":2,"title":"简述java偏向锁","slug":"简述java偏向锁","link":"#简述java偏向锁","children":[]},{"level":2,"title":"简述轻量级锁","slug":"简述轻量级锁","link":"#简述轻量级锁","children":[]},{"level":2,"title":"简述锁优化策略","slug":"简述锁优化策略","link":"#简述锁优化策略","children":[]},{"level":2,"title":"简述java的自旋锁","slug":"简述java的自旋锁","link":"#简述java的自旋锁","children":[]},{"level":2,"title":"简述自适应自旋锁","slug":"简述自适应自旋锁","link":"#简述自适应自旋锁","children":[]},{"level":2,"title":"简述锁粗化","slug":"简述锁粗化","link":"#简述锁粗化","children":[]},{"level":2,"title":"简述锁消除","slug":"简述锁消除","link":"#简述锁消除","children":[]},{"level":2,"title":"简述Lock与ReentrantLock","slug":"简述lock与reentrantlock","link":"#简述lock与reentrantlock","children":[]},{"level":2,"title":"AQS获取独占锁/释放独占锁原理","slug":"aqs获取独占锁-释放独占锁原理","link":"#aqs获取独占锁-释放独占锁原理","children":[]},{"level":2,"title":"AQS获取共享锁/释放共享锁原理","slug":"aqs获取共享锁-释放共享锁原理","link":"#aqs获取共享锁-释放共享锁原理","children":[]}],"git":{"updatedTime":1690792099000,"contributors":[{"name":"〇°","email":"990130556@qq.com","commits":1}]},"filePathRelative":"Java周边/基础/java/2Java多线程.md"}');export{l as data};
