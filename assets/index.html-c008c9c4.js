const l=JSON.parse('{"key":"v-c3952bdc","path":"/Java%E5%91%A8%E8%BE%B9/%E5%9F%BA%E7%A1%80/java/","title":"Java基础","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Java语言具有哪些特点？","slug":"java语言具有哪些特点","link":"#java语言具有哪些特点","children":[]},{"level":2,"title":"面向对象的三大特性？","slug":"面向对象的三大特性","link":"#面向对象的三大特性","children":[]},{"level":2,"title":"字节序定义以及Java属于哪种字节序？","slug":"字节序定义以及java属于哪种字节序","link":"#字节序定义以及java属于哪种字节序","children":[]},{"level":2,"title":"JDK与JRE有什么区别？","slug":"jdk与jre有什么区别","link":"#jdk与jre有什么区别","children":[]},{"level":2,"title":"简述Java访问修饰符","slug":"简述java访问修饰符","link":"#简述java访问修饰符","children":[]},{"level":2,"title":"构造方法、成员变量初始化以及静态成员变量三者的初始化顺序？","slug":"构造方法、成员变量初始化以及静态成员变量三者的初始化顺序","link":"#构造方法、成员变量初始化以及静态成员变量三者的初始化顺序","children":[]},{"level":2,"title":"接口和抽象类的相同点和区别？","slug":"接口和抽象类的相同点和区别","link":"#接口和抽象类的相同点和区别","children":[]},{"level":2,"title":"为什么Java语言不支持多重继承？","slug":"为什么java语言不支持多重继承","link":"#为什么java语言不支持多重继承","children":[]},{"level":2,"title":"Java提供的多态机制？","slug":"java提供的多态机制","link":"#java提供的多态机制","children":[]},{"level":2,"title":"重载与覆盖的区别？","slug":"重载与覆盖的区别","link":"#重载与覆盖的区别","children":[]},{"level":2,"title":"final、finally和finalize的区别是什么？","slug":"final、finally和finalize的区别是什么","link":"#final、finally和finalize的区别是什么","children":[]},{"level":2,"title":"出现在Java程序中的finally代码块是否一定会执行？","slug":"出现在java程序中的finally代码块是否一定会执行","link":"#出现在java程序中的finally代码块是否一定会执行","children":[]},{"level":2,"title":"Java语言中关键字static的作用是什么？","slug":"java语言中关键字static的作用是什么","link":"#java语言中关键字static的作用是什么","children":[]},{"level":2,"title":"Java代码块执行顺序","slug":"java代码块执行顺序","link":"#java代码块执行顺序","children":[]},{"level":2,"title":"Java中一维数组和二维数组的声明方式？","slug":"java中一维数组和二维数组的声明方式","link":"#java中一维数组和二维数组的声明方式","children":[]},{"level":2,"title":"String和StringBuffer有什么区别？","slug":"string和stringbuffer有什么区别","link":"#string和stringbuffer有什么区别","children":[]},{"level":2,"title":"判等运算符==与equals的区别？","slug":"判等运算符-与equals的区别","link":"#判等运算符-与equals的区别","children":[]},{"level":2,"title":"为什么要把String设计为不变量？","slug":"为什么要把string设计为不变量","link":"#为什么要把string设计为不变量","children":[]},{"level":2,"title":"序列化是什么？","slug":"序列化是什么","link":"#序列化是什么","children":[]},{"level":2,"title":"简述Java中Class对象","slug":"简述java中class对象","link":"#简述java中class对象","children":[]},{"level":2,"title":"Java反射机制是什么？","slug":"java反射机制是什么","link":"#java反射机制是什么","children":[]},{"level":2,"title":"简述注解","slug":"简述注解","link":"#简述注解","children":[]},{"level":2,"title":"简述元注解","slug":"简述元注解","link":"#简述元注解","children":[]},{"level":2,"title":"简述Java异常的分类","slug":"简述java异常的分类","link":"#简述java异常的分类","children":[]},{"level":2,"title":"简述throw与throws的区别","slug":"简述throw与throws的区别","link":"#简述throw与throws的区别","children":[]},{"level":2,"title":"简述泛型","slug":"简述泛型","link":"#简述泛型","children":[]},{"level":2,"title":"简述泛型擦除","slug":"简述泛型擦除","link":"#简述泛型擦除","children":[]},{"level":2,"title":"简述Java基本数据类型","slug":"简述java基本数据类型","link":"#简述java基本数据类型","children":[]},{"level":2,"title":"简述自动装箱拆箱","slug":"简述自动装箱拆箱","link":"#简述自动装箱拆箱","children":[]},{"level":2,"title":"简述重载与重写的区别","slug":"简述重载与重写的区别","link":"#简述重载与重写的区别","children":[]},{"level":2,"title":"简述java的多态","slug":"简述java的多态","link":"#简述java的多态","children":[]},{"level":2,"title":"简述抽象类与接口的区别","slug":"简述抽象类与接口的区别","link":"#简述抽象类与接口的区别","children":[]},{"level":2,"title":"简述==与equals方法的区别","slug":"简述-与equals方法的区别","link":"#简述-与equals方法的区别","children":[]},{"level":2,"title":"简述Object类常用方法","slug":"简述object类常用方法","link":"#简述object类常用方法","children":[]},{"level":2,"title":"简述内部类及其作用","slug":"简述内部类及其作用","link":"#简述内部类及其作用","children":[]},{"level":2,"title":"简述String/StringBuffer与StringBuilder","slug":"简述string-stringbuffer与stringbuilder","link":"#简述string-stringbuffer与stringbuilder","children":[]},{"level":2,"title":"简述Java序列化与反序列化的实现","slug":"简述java序列化与反序列化的实现","link":"#简述java序列化与反序列化的实现","children":[]},{"level":2,"title":"简述JAVA的List","slug":"简述java的list","link":"#简述java的list","children":[]},{"level":2,"title":"Java中线程安全的基本数据结构有哪些","slug":"java中线程安全的基本数据结构有哪些","link":"#java中线程安全的基本数据结构有哪些","children":[]},{"level":2,"title":"简述JAVA的Set","slug":"简述java的set","link":"#简述java的set","children":[]},{"level":2,"title":"简述JAVA的HashMap","slug":"简述java的hashmap","link":"#简述java的hashmap","children":[]},{"level":2,"title":"为何HashMap线程不安全","slug":"为何hashmap线程不安全","link":"#为何hashmap线程不安全","children":[]},{"level":2,"title":"简述java的TreeMap","slug":"简述java的treemap","link":"#简述java的treemap","children":[]},{"level":2,"title":"Collection和Collections有什么区别？","slug":"collection和collections有什么区别","link":"#collection和collections有什么区别","children":[]},{"level":2,"title":"ArrayList、Vector和LinkedList有什么共同点与区别？","slug":"arraylist、vector和linkedlist有什么共同点与区别","link":"#arraylist、vector和linkedlist有什么共同点与区别","children":[]},{"level":2,"title":"HashMap和Hashtable有什么区别？","slug":"hashmap和hashtable有什么区别","link":"#hashmap和hashtable有什么区别","children":[]},{"level":2,"title":"如何决定使用HashMap还是TreeMap?","slug":"如何决定使用hashmap还是treemap","link":"#如何决定使用hashmap还是treemap","children":[]},{"level":2,"title":"fail-fast和fail-safe迭代器的区别是什么？","slug":"fail-fast和fail-safe迭代器的区别是什么","link":"#fail-fast和fail-safe迭代器的区别是什么","children":[]},{"level":2,"title":"HashSet中，equals与hashCode之间的关系？","slug":"hashset中-equals与hashcode之间的关系","link":"#hashset中-equals与hashcode之间的关系","children":[]}],"git":{"updatedTime":1690792099000,"contributors":[{"name":"〇°","email":"990130556@qq.com","commits":1}]},"filePathRelative":"Java周边/基础/java/README.md"}');export{l as data};
