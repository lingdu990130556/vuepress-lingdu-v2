import{_ as n,o as e,c as a,d as s}from"./app-ac465cee.js";const l={},i=s(`<h1 id="给用户赋某个文件夹操作的权限" tabindex="-1"><a class="header-anchor" href="#给用户赋某个文件夹操作的权限" aria-hidden="true">#</a> 给用户赋某个文件夹操作的权限</h1><blockquote><p>在root用户登录的情况，赋予opt目录给liuhai这个用户权限 示例代码：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将目录/opt 及其下面的所有文件、子目录的文件主改成 lingdu</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> lingdu:lingdu /opt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>然后在lingdu用户下：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#给目录opt设置权限</span>
<span class="token function">chmod</span> <span class="token number">760</span> /opt
or 
<span class="token function">chmod</span> <span class="token number">775</span> /opt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="chown-命令" tabindex="-1"><a class="header-anchor" href="#chown-命令" aria-hidden="true">#</a> chown 命令</h2><ul><li>语法</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>chown<span class="token punctuation">(</span>选项<span class="token punctuation">)</span><span class="token punctuation">(</span>参数<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>选项</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>-c或——changes：效果类似“-v”参数，但仅回报更改的部分；

-f或--quite或——silent：不显示错误信息；

-h或--no-dereference：只对符号连接的文件作修改，而不更改其他任何相关文件；

-R或——recursive：递归处理，将指定目录下的所有文件及子目录一并处理；

-v或——version：显示指令执行过程；

--dereference：效果和“-h”参数相同；

--help：在线帮助；

<span class="token parameter variable">--reference</span><span class="token operator">=</span><span class="token operator">&lt;</span>参考文件或目录<span class="token operator">&gt;</span>：把指定文件或目录的拥有者与所属群组全部设成和参考文件或目录的拥有者与所属群组相同；

--version：显示版本信息。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>用户：组：指定所有者和所属工作组。当省略“：组”，仅改变文件所有者；
文件：指定要改变所有者和工作组的文件列表。支持多个文件和目标，支持shell通配符。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>实例</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 将目录/opt 及其下面的所有文件、子目录的文件主改成 lingdu</span>
<span class="token function">chown</span> <span class="token parameter variable">-R</span> lingdu:lingdu /opt 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="chmod命令" tabindex="-1"><a class="header-anchor" href="#chmod命令" aria-hidden="true">#</a> chmod命令</h2><blockquote><p>Linux/Unix 的文件调用权限分为三级 : 文件拥有者、群组、其他。利用 chmod 可以藉以控制文件如何被他人所调用。</p></blockquote><blockquote><p>使用权限 : 所有使用者</p></blockquote><ul><li>语法</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token punctuation">[</span>-cfvR<span class="token punctuation">]</span> <span class="token punctuation">[</span>--help<span class="token punctuation">]</span> <span class="token punctuation">[</span>--version<span class="token punctuation">]</span> mode file<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>参数说明</li></ul><blockquote><p>mode : 权限设定字串，格式如下 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>ugoa<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">[</span>+-<span class="token operator">=</span><span class="token punctuation">]</span><span class="token punctuation">[</span>rwxX<span class="token punctuation">]</span><span class="token punctuation">..</span>.<span class="token punctuation">]</span><span class="token punctuation">[</span>,<span class="token punctuation">..</span>.<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>其中:</p><ol><li>u 表示该文件的拥有者，g 表示与该文件的拥有者属于同一个群体(group)者，o 表示其他以外的人，a 表示这三者皆是。</li><li>&#39;+&#39; 表示增加权限、&#39;-&#39; 表示取消权限、&#39;=&#39; 表示唯一设定权限。</li><li>r 表示可读取，w 表示可写入，x 表示可执行，X 表示只有当该文件是个子目录或者该文件已经被设定过为可执行。</li></ol></blockquote><blockquote><p>其他参数说明：</p><ol><li>-c : 若该文件权限确实已经更改，才显示其更改动作</li><li>-f : 若该文件权限无法被更改也不要显示错误讯息</li><li>-v : 显示权限变更的详细资料</li><li>-R : 对目前目录下的所有文件与子目录进行相同的权限变更(即以递回的方式逐个变更)</li><li>--help : 显示辅助说明</li><li>--version : 显示版本</li></ol></blockquote><ul><li>实例</li></ul><blockquote><p>将文件 file1.txt 设为所有人皆可读取 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> ugo+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>将文件 file1.txt 设为所有人皆可读取 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> a+r file1.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>将文件 file1.txt 与 file2.txt 设为该文件拥有者，与其所属同一个群体者可写入，但其他以外的人则不可写入 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> ug+w,o-w file1.txt file2.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>将 ex1.py 设定为只有该文件拥有者可以执行 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> u+x ex1.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>将目前目录下的所有文件与子目录皆设为任何人可读取 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token parameter variable">-R</span> a+r *
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>此外chmod也可以用数字来表示权限如 :</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> <span class="token number">777</span> <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>语法为：</p></blockquote><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">chmod</span> abc <span class="token function">file</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><blockquote><p>其中a,b,c各为一个数字，分别表示User、Group、及Other的权限。 r=4，w=2，x=1 若要rwx属性则4+2+1=7； 若要rw-属性则4+2=6； 若要r-x属性则4+1=5。</p></blockquote><p><code>chmod a=rwx file</code> 和 <code>chmod 777 file</code> 效果相同</p><hr><p><code>chmod ug=rwx,o=x file</code> 和 <code>chmod 771 file</code> 效果相同</p><blockquote><p>若用chmod 4755 filename可使此程序具有root的权限</p></blockquote>`,44),c=[i];function o(d,t){return e(),a("div",null,c)}const p=n(l,[["render",o],["__file","文件夹权限.html.vue"]]);export{p as default};
